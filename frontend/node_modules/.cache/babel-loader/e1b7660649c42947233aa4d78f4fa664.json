{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Srv\\\\OneDrive - Veralto\\\\Desktop\\\\BYS-PROJECT\\\\seating-bus\\\\frontend\\\\src\\\\components\\\\Admin\\\\UserManagementPage.jsx\";\n// src/components/Admin/UserManagementPage.jsx\nimport React, { useState, useEffect } from 'react';\nimport './UserManagementPage.css';\nimport EditUserPopup from './EditUserPopup'; // Import the EditUserPopup component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserManagementPage = () => {\n  const [users, setUsers] = useState([]);\n  const [showEditPopup, setShowEditPopup] = useState(false);\n  const [selectedUser, setSelectedUser] = useState(null);\n  useEffect(() => {\n    // Fetch users from the backend (to be implemented later)\n    // For now, use static data\n    const staticUsers = [{\n      id: 1,\n      name: 'John Doe',\n      email: 'john@example.com'\n    }, {\n      id: 2,\n      name: 'Jane Smith',\n      email: 'jane@example.com'\n    } // Add more static user data as needed\n    ];\n    setUsers(staticUsers);\n  }, []);\n\n  const handleEditUser = user => {\n    setSelectedUser(user);\n    setShowEditPopup(true);\n  };\n\n  const handleSaveUser = editedUser => {\n    // Save edited user details to the backend (to be implemented later)\n    // For now, update the user in the local state\n    setUsers(prevUsers => prevUsers.map(u => u.id === editedUser.id ? editedUser : u));\n    setShowEditPopup(false);\n  };\n\n  const handleCancelEdit = () => {\n    setShowEditPopup(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-management-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEditUser(user),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), showEditPopup && /*#__PURE__*/_jsxDEV(EditUserPopup, {\n      user: selectedUser,\n      onSave: handleSaveUser,\n      onCancel: handleCancelEdit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\nexport default UserManagementPage;","map":{"version":3,"sources":["C:/Users/Srv/OneDrive - Veralto/Desktop/BYS-PROJECT/seating-bus/frontend/src/components/Admin/UserManagementPage.jsx"],"names":["React","useState","useEffect","EditUserPopup","UserManagementPage","users","setUsers","showEditPopup","setShowEditPopup","selectedUser","setSelectedUser","staticUsers","id","name","email","handleEditUser","user","handleSaveUser","editedUser","prevUsers","map","u","handleCancelEdit"],"mappings":"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","sourcesContent":["// src/components/Admin/UserManagementPage.jsx\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport './UserManagementPage.css';\r\nimport EditUserPopup from './EditUserPopup'; // Import the EditUserPopup component\r\n\r\nconst UserManagementPage = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [showEditPopup, setShowEditPopup] = useState(false);\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Fetch users from the backend (to be implemented later)\r\n    // For now, use static data\r\n    const staticUsers = [\r\n      { id: 1, name: 'John Doe', email: 'john@example.com' },\r\n      { id: 2, name: 'Jane Smith', email: 'jane@example.com' },\r\n      // Add more static user data as needed\r\n    ];\r\n    setUsers(staticUsers);\r\n  }, []);\r\n\r\n  const handleEditUser = (user) => {\r\n    setSelectedUser(user);\r\n    setShowEditPopup(true);\r\n  };\r\n\r\n  const handleSaveUser = (editedUser) => {\r\n    // Save edited user details to the backend (to be implemented later)\r\n    // For now, update the user in the local state\r\n    setUsers(prevUsers => prevUsers.map(u => u.id === editedUser.id ? editedUser : u));\r\n    setShowEditPopup(false);\r\n  };\r\n\r\n  const handleCancelEdit = () => {\r\n    setShowEditPopup(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"user-management-container\">\r\n      <h2>User Management</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Name</th>\r\n            <th>Email</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {users.map(user => (\r\n            <tr key={user.id}>\r\n              <td>{user.id}</td>\r\n              <td>{user.name}</td>\r\n              <td>{user.email}</td>\r\n              <td>\r\n                <button onClick={() => handleEditUser(user)}>Edit</button>\r\n                {/* Add delete button and its functionality */}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      {/* Render edit user popup if showEditPopup is true */}\r\n      {showEditPopup && (\r\n        <EditUserPopup user={selectedUser} onSave={handleSaveUser} onCancel={handleCancelEdit} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserManagementPage;\r\n"]},"metadata":{},"sourceType":"module"}