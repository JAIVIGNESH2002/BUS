{"ast":null,"code":"import { authConstants } from \"../constants\"; // Check if the \"user\" item exists in local storage\n\nconst userFromLocalStorage = localStorage.getItem(\"user\");\nlet user = null;\n\nif (userFromLocalStorage) {\n  try {\n    user = JSON.parse(userFromLocalStorage);\n  } catch (error) {\n    console.error(\"Error parsing user from local storage:\", error); // Handle parsing error (e.g., fallback to default user)\n  }\n}\n\nconst initialState = {\n  user,\n  loggedIn: user ? true : false,\n  error: null\n};\nexport const authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case authConstants.LOGIN_REQUEST:\n      return {\n        loggingIn: true,\n        user: action.user\n      };\n\n    case authConstants.LOGIN_SUCCESS:\n      // Save user data to local storage\n      localStorage.setItem(\"user\", JSON.stringify(action.user));\n      return {\n        loggedIn: true,\n        user: action.user\n      };\n\n    case authConstants.LOGIN_FAILURE:\n      return {\n        error: action.error\n      };\n\n    case authConstants.LOGOUT:\n      // Remove user data from local storage\n      localStorage.removeItem(\"user\");\n      return {};\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/Srv/OneDrive - Veralto/Desktop/seating-bus/frontend/src/reducers/auth.js"],"names":["authConstants","userFromLocalStorage","localStorage","getItem","user","JSON","parse","error","console","initialState","loggedIn","authReducer","state","action","type","LOGIN_REQUEST","loggingIn","LOGIN_SUCCESS","setItem","stringify","LOGIN_FAILURE","LOGOUT","removeItem"],"mappings":"AAAA,SAASA,aAAT,QAA8B,cAA9B,C,CAEA;;AACA,MAAMC,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAA7B;AACA,IAAIC,IAAI,GAAG,IAAX;;AACA,IAAIH,oBAAJ,EAA0B;AACxB,MAAI;AACFG,IAAAA,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWL,oBAAX,CAAP;AACD,GAFD,CAEE,OAAOM,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACD,KAAR,CAAc,wCAAd,EAAwDA,KAAxD,EADc,CAEd;AACD;AACF;;AAED,MAAME,YAAY,GAAG;AACnBL,EAAAA,IADmB;AAEnBM,EAAAA,QAAQ,EAAEN,IAAI,GAAG,IAAH,GAAU,KAFL;AAGnBG,EAAAA,KAAK,EAAE;AAHY,CAArB;AAMA,OAAO,MAAMI,WAAW,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAC3D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKd,aAAa,CAACe,aAAnB;AACE,aAAO;AACLC,QAAAA,SAAS,EAAE,IADN;AAELZ,QAAAA,IAAI,EAAES,MAAM,CAACT;AAFR,OAAP;;AAIF,SAAKJ,aAAa,CAACiB,aAAnB;AACE;AACAf,MAAAA,YAAY,CAACgB,OAAb,CAAqB,MAArB,EAA6Bb,IAAI,CAACc,SAAL,CAAeN,MAAM,CAACT,IAAtB,CAA7B;AACA,aAAO;AACLM,QAAAA,QAAQ,EAAE,IADL;AAELN,QAAAA,IAAI,EAAES,MAAM,CAACT;AAFR,OAAP;;AAIF,SAAKJ,aAAa,CAACoB,aAAnB;AACE,aAAO;AACLb,QAAAA,KAAK,EAAEM,MAAM,CAACN;AADT,OAAP;;AAGF,SAAKP,aAAa,CAACqB,MAAnB;AACG;AACAnB,MAAAA,YAAY,CAACoB,UAAb,CAAwB,MAAxB;AACD,aAAO,EAAP;;AACF;AACE,aAAOV,KAAP;AAtBJ;AAwBD,CAzBM","sourcesContent":["import { authConstants } from \"../constants\";\r\n\r\n// Check if the \"user\" item exists in local storage\r\nconst userFromLocalStorage = localStorage.getItem(\"user\");\r\nlet user = null;\r\nif (userFromLocalStorage) {\r\n  try {\r\n    user = JSON.parse(userFromLocalStorage);\r\n  } catch (error) {\r\n    console.error(\"Error parsing user from local storage:\", error);\r\n    // Handle parsing error (e.g., fallback to default user)\r\n  }\r\n}\r\n\r\nconst initialState = {\r\n  user,\r\n  loggedIn: user ? true : false,\r\n  error: null,\r\n};\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case authConstants.LOGIN_REQUEST:\r\n      return {\r\n        loggingIn: true,\r\n        user: action.user,\r\n      };\r\n    case authConstants.LOGIN_SUCCESS:\r\n      // Save user data to local storage\r\n      localStorage.setItem(\"user\", JSON.stringify(action.user));\r\n      return {\r\n        loggedIn: true,\r\n        user: action.user,\r\n      };\r\n    case authConstants.LOGIN_FAILURE:\r\n      return {\r\n        error: action.error\r\n      };\r\n    case authConstants.LOGOUT:\r\n       // Remove user data from local storage\r\n       localStorage.removeItem(\"user\");\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}