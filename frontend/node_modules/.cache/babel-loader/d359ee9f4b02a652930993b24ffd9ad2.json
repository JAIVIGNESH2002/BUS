{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Srv\\\\OneDrive - Veralto\\\\Desktop\\\\BYS-PROJECT\\\\seating-bus\\\\frontend\\\\src\\\\components\\\\Admin\\\\UserManagementPage.jsx\";\n// src/components/Admin/UserManagementPage.jsx\nimport React, { useState, useEffect } from \"react\";\nimport \"./UserManagementPage.css\";\nimport EditUserPopup from \"./EditUserPopup\"; // Import the EditUserPopup component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserManagementPage = () => {\n  const [users, setUsers] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage] = useState(10); // Number of items to display per page\n\n  const [showEditPopup, setShowEditPopup] = useState(false);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [showDeleteConfirmation, setShowDeleteConfirmation] = useState(false);\n  const [userToDelete, setUserToDelete] = useState(null);\n  const [filterRole, setFilterRole] = useState(\"\");\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  useEffect(() => {\n    // Fetch users from the backend (to be implemented later)\n    // For now, use static data\n    const staticUsers = [{\n      id: 1,\n      firstName: \"Sriram\",\n      lastName: \"Venkatraman\",\n      email: \"sriramv@esko.com\",\n      role: \"DevOps\"\n    }, {\n      id: 2,\n      firstName: \"Surya\",\n      lastName: \"Thondimuthu\",\n      email: \"suryat@esko.com\",\n      role: \"DevOps\"\n    }, {\n      id: 3,\n      firstName: \"Sneha\",\n      lastName: \"Thiyagarajan\",\n      email: \"snehat@esko.com\",\n      role: \"DevOps\"\n    }, {\n      id: 4,\n      firstName: \"JegaVarsan\",\n      lastName: \"AnnaThurai\",\n      email: \"jegavarsan@esko.com\",\n      role: \"TechOps\"\n    }, {\n      id: 5,\n      firstName: \"Chaarvika\",\n      lastName: \"Arunachalam\",\n      email: \"chaarvika@esko.com\",\n      role: \"TechOps\"\n    }, {\n      id: 6,\n      firstName: \"Jaivignesh\",\n      lastName: \"GK\",\n      email: \"jv@esko.com\",\n      role: \"DevOps\"\n    }, {\n      id: 7,\n      firstName: \"Harsh\",\n      lastName: \"Patel\",\n      email: \"harsh@esko.com\",\n      role: \"TechOps\"\n    }, {\n      id: 8,\n      firstName: \"NaveenKumar\",\n      lastName: \"RR\",\n      email: \"naveen@esko.com\",\n      role: \"TechOps\"\n    }, {\n      id: 9,\n      firstName: \"Uva\",\n      lastName: \"Roobini\",\n      email: \"uva@esko.com\",\n      role: \"DevOps\"\n    }, {\n      id: 10,\n      firstName: \"Lakshana\",\n      lastName: \"Sivakumar\",\n      email: \"lakshana@esko.com\",\n      role: \"TechOps\"\n    }, {\n      id: 11,\n      firstName: \"Kevin\",\n      lastName: \"Marshal\",\n      email: \"kevin@esko.com\",\n      role: \"DevOps\"\n    }, {\n      id: 12,\n      firstName: \"Jane\",\n      lastName: \"Smith\",\n      email: \"jane@esko.com\",\n      role: \"TechOps\"\n    }, {\n      id: 13,\n      firstName: \"Mark\",\n      lastName: \"Henry\",\n      email: \"markhenry@esko.com\",\n      role: \"DevOps\"\n    } // Add more static user data as needed\n    ];\n    setUsers(staticUsers);\n  }, []);\n\n  const handleEditUser = user => {\n    setSelectedUser(user);\n    setShowEditPopup(true);\n  };\n\n  const handleSaveUser = editedUser => {\n    // Save edited user details to the backend (to be implemented later)\n    // For now, update the user in the local state\n    setUsers(prevUsers => prevUsers.map(u => u.id === editedUser.id ? editedUser : u));\n    setShowEditPopup(false);\n  };\n\n  const handleCancelEdit = () => {\n    setShowEditPopup(false);\n  };\n\n  const handleDeleteUser = user => {\n    setUserToDelete(user);\n    setShowDeleteConfirmation(true);\n  };\n\n  const confirmDelete = () => {\n    // Delete the user from the local state\n    setUsers(prevUsers => prevUsers.filter(u => u.id !== userToDelete.id));\n    setShowDeleteConfirmation(false);\n  };\n\n  const cancelDelete = () => {\n    setShowDeleteConfirmation(false);\n  };\n\n  const togglePasswordVisibility = user => {\n    // Toggle password visibility for the selected user\n    const updatedUsers = users.map(u => {\n      if (u.id === user.id) {\n        return { ...u,\n          passwordVisible: !u.passwordVisible\n        };\n      }\n\n      return u;\n    });\n    setUsers(updatedUsers);\n  };\n\n  const filterUsersByRole = role => {\n    setFilterRole(role);\n  };\n\n  const clearFilter = () => {\n    setFilterRole(\"\");\n  };\n\n  const handleSearch = e => {\n    setSearchTerm(e.target.value);\n  };\n\n  const clearSearch = () => {\n    setSearchTerm(\"\");\n  };\n\n  const filteredUsers = users.filter(user => {\n    return (!filterRole || user.role === filterRole) && Object.values(user).some(value => String(value).toLowerCase().includes(searchTerm.toLowerCase()));\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-management-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-select\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: filterRole,\n          onChange: e => filterUsersByRole(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All Roles\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"DevOps\",\n            children: \"DevOps\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"TechOps\",\n            children: \"TechOps\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: clearFilter,\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: searchTerm,\n          onChange: handleSearch,\n          placeholder: \"Search...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: clearSearch,\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      class: \"content-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: filteredUsers.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.firstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.lastName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.role\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEditUser(user),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteUser(user),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this)]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this), showEditPopup && /*#__PURE__*/_jsxDEV(EditUserPopup, {\n      user: selectedUser,\n      onSave: handleSaveUser,\n      onCancel: handleCancelEdit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 9\n    }, this), showDeleteConfirmation && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"delete-confirmation\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Are you sure you want to delete this user?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: confirmDelete,\n        children: \"Yes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: cancelDelete,\n        children: \"No\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 5\n  }, this);\n};\n\nexport default UserManagementPage;","map":{"version":3,"sources":["C:/Users/Srv/OneDrive - Veralto/Desktop/BYS-PROJECT/seating-bus/frontend/src/components/Admin/UserManagementPage.jsx"],"names":["React","useState","useEffect","EditUserPopup","UserManagementPage","users","setUsers","currentPage","setCurrentPage","itemsPerPage","showEditPopup","setShowEditPopup","selectedUser","setSelectedUser","showDeleteConfirmation","setShowDeleteConfirmation","userToDelete","setUserToDelete","filterRole","setFilterRole","searchTerm","setSearchTerm","staticUsers","id","firstName","lastName","email","role","handleEditUser","user","handleSaveUser","editedUser","prevUsers","map","u","handleCancelEdit","handleDeleteUser","confirmDelete","filter","cancelDelete","togglePasswordVisibility","updatedUsers","passwordVisible","filterUsersByRole","clearFilter","handleSearch","e","target","value","clearSearch","filteredUsers","Object","values","some","String","toLowerCase","includes"],"mappings":"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","sourcesContent":["// src/components/Admin/UserManagementPage.jsx\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"./UserManagementPage.css\";\r\nimport EditUserPopup from \"./EditUserPopup\"; // Import the EditUserPopup component\r\n\r\nconst UserManagementPage = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [itemsPerPage] = useState(10); // Number of items to display per page\r\n  const [showEditPopup, setShowEditPopup] = useState(false);\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n  const [showDeleteConfirmation, setShowDeleteConfirmation] = useState(false);\r\n  const [userToDelete, setUserToDelete] = useState(null);\r\n  const [filterRole, setFilterRole] = useState(\"\");\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    // Fetch users from the backend (to be implemented later)\r\n    // For now, use static data\r\n    const staticUsers = [\r\n      {\r\n        id: 1,\r\n        firstName: \"Sriram\",\r\n        lastName: \"Venkatraman\",\r\n        email: \"sriramv@esko.com\",\r\n        role: \"DevOps\",\r\n      },\r\n      {\r\n        id: 2,\r\n        firstName: \"Surya\",\r\n        lastName: \"Thondimuthu\",\r\n        email: \"suryat@esko.com\",\r\n        role: \"DevOps\",\r\n      },\r\n      {\r\n        id: 3,\r\n        firstName: \"Sneha\",\r\n        lastName: \"Thiyagarajan\",\r\n        email: \"snehat@esko.com\",\r\n        \r\n        role: \"DevOps\",\r\n      },\r\n      {\r\n        id: 4,\r\n        firstName: \"JegaVarsan\",\r\n        lastName: \"AnnaThurai\",\r\n        email: \"jegavarsan@esko.com\",\r\n        \r\n        role: \"TechOps\",\r\n      },\r\n      {\r\n        id: 5,\r\n        firstName: \"Chaarvika\",\r\n        lastName: \"Arunachalam\",\r\n        email: \"chaarvika@esko.com\",\r\n        \r\n        role: \"TechOps\",\r\n      },\r\n      {\r\n        id: 6,\r\n        firstName: \"Jaivignesh\",\r\n        lastName: \"GK\",\r\n        email: \"jv@esko.com\",\r\n        \r\n        role: \"DevOps\",\r\n      },\r\n      {\r\n        id: 7,\r\n        firstName: \"Harsh\",\r\n        lastName: \"Patel\",\r\n        email: \"harsh@esko.com\",\r\n        \r\n        role: \"TechOps\",\r\n      },\r\n      {\r\n        id: 8,\r\n        firstName: \"NaveenKumar\",\r\n        lastName: \"RR\",\r\n        email: \"naveen@esko.com\",\r\n        \r\n        role: \"TechOps\",\r\n      },\r\n      {\r\n        id: 9,\r\n        firstName: \"Uva\",\r\n        lastName: \"Roobini\",\r\n        email: \"uva@esko.com\",\r\n        \r\n        role: \"DevOps\",\r\n      },\r\n      {\r\n        id: 10,\r\n        firstName: \"Lakshana\",\r\n        lastName: \"Sivakumar\",\r\n        email: \"lakshana@esko.com\",\r\n        \r\n        role: \"TechOps\",\r\n      },\r\n      {\r\n        id: 11,\r\n        firstName: \"Kevin\",\r\n        lastName: \"Marshal\",\r\n        email: \"kevin@esko.com\",\r\n        \r\n        role: \"DevOps\",\r\n      },\r\n      {\r\n        id: 12,\r\n        firstName: \"Jane\",\r\n        lastName: \"Smith\",\r\n        email: \"jane@esko.com\",\r\n        \r\n        role: \"TechOps\",\r\n      },\r\n      {\r\n        id: 13,\r\n        firstName: \"Mark\",\r\n        lastName: \"Henry\",\r\n        email: \"markhenry@esko.com\",\r\n        \r\n        role: \"DevOps\",\r\n      }\r\n      // Add more static user data as needed\r\n    ];\r\n    setUsers(staticUsers);\r\n  }, []);\r\n\r\n\r\n\r\n  \r\n\r\n  const handleEditUser = (user) => {\r\n    setSelectedUser(user);\r\n    setShowEditPopup(true);\r\n  };\r\n\r\n  const handleSaveUser = (editedUser) => {\r\n    // Save edited user details to the backend (to be implemented later)\r\n    // For now, update the user in the local state\r\n    setUsers((prevUsers) =>\r\n      prevUsers.map((u) => (u.id === editedUser.id ? editedUser : u))\r\n    );\r\n    setShowEditPopup(false);\r\n  };\r\n\r\n  const handleCancelEdit = () => {\r\n    setShowEditPopup(false);\r\n  };\r\n\r\n  const handleDeleteUser = (user) => {\r\n    setUserToDelete(user);\r\n    setShowDeleteConfirmation(true);\r\n  };\r\n\r\n  const confirmDelete = () => {\r\n    // Delete the user from the local state\r\n    setUsers((prevUsers) => prevUsers.filter((u) => u.id !== userToDelete.id));\r\n    setShowDeleteConfirmation(false);\r\n  };\r\n\r\n  const cancelDelete = () => {\r\n    setShowDeleteConfirmation(false);\r\n  };\r\n\r\n  const togglePasswordVisibility = (user) => {\r\n    // Toggle password visibility for the selected user\r\n    const updatedUsers = users.map((u) => {\r\n      if (u.id === user.id) {\r\n        return { ...u, passwordVisible: !u.passwordVisible };\r\n      }\r\n      return u;\r\n    });\r\n    setUsers(updatedUsers);\r\n  };\r\n\r\n  const filterUsersByRole = (role) => {\r\n    setFilterRole(role);\r\n  };\r\n\r\n  const clearFilter = () => {\r\n    setFilterRole(\"\");\r\n  };\r\n\r\n  const handleSearch = (e) => {\r\n    setSearchTerm(e.target.value);\r\n  };\r\n\r\n  const clearSearch = () => {\r\n    setSearchTerm(\"\");\r\n  };\r\n\r\n  const filteredUsers = users.filter((user) => {\r\n    return (\r\n      (!filterRole || user.role === filterRole) &&\r\n      Object.values(user).some((value) =>\r\n        String(value).toLowerCase().includes(searchTerm.toLowerCase())\r\n      )\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"user-management-container\">\r\n      <h2>User Management</h2>\r\n      <div className=\"filter-container\">\r\n        <div className=\"filter-select\">\r\n          <select\r\n            value={filterRole}\r\n            onChange={(e) => filterUsersByRole(e.target.value)}\r\n          >\r\n            <option value=\"\">All Roles</option>\r\n            <option value=\"DevOps\">DevOps</option>\r\n            <option value=\"TechOps\">TechOps</option>\r\n            {/* Add more role options as needed */}\r\n          </select>\r\n          <button onClick={clearFilter}>Clear</button>\r\n        </div>\r\n        <div className=\"search-container\">\r\n          <input\r\n            type=\"text\"\r\n            value={searchTerm}\r\n            onChange={handleSearch}\r\n            placeholder=\"Search...\"\r\n          />\r\n          <button onClick={clearSearch}>Clear</button>\r\n        </div>\r\n      </div>\r\n      <table class=\"content-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>First Name</th>\r\n            <th>Last Name</th>\r\n            <th>Email</th>\r\n            <th>Role</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {filteredUsers.map((user) => (\r\n            <tr key={user.id}>\r\n              <td>{user.id}</td>\r\n              <td>{user.firstName}</td>\r\n              <td>{user.lastName}</td>\r\n              <td>{user.email}</td>\r\n              <td>{user.role}</td>\r\n              <td>\r\n                <button onClick={() => handleEditUser(user)}>Edit</button>\r\n                <button onClick={() => handleDeleteUser(user)}>Delete</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      {/* Render edit user popup if showEditPopup is true */}\r\n      {showEditPopup && (\r\n        <EditUserPopup\r\n          user={selectedUser}\r\n          onSave={handleSaveUser}\r\n          onCancel={handleCancelEdit}\r\n        />\r\n      )}\r\n      {/* Render delete confirmation popup if showDeleteConfirmation is true */}\r\n      {showDeleteConfirmation && (\r\n        <div className=\"delete-confirmation\">\r\n          <p>Are you sure you want to delete this user?</p>\r\n          <button onClick={confirmDelete}>Yes</button>\r\n          <button onClick={cancelDelete}>No</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserManagementPage;\r\n"]},"metadata":{},"sourceType":"module"}