{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Srv\\\\OneDrive - Veralto\\\\Desktop\\\\seating-bus\\\\frontend\\\\src\\\\components\\\\BookSeatPage\\\\BookSeatPage.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./BookSeatPage.css\"; // Import CSS for BookSeatPage\n\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BookSeatPage = () => {\n  // State variables for form fields\n  const [userName, setUserName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [fromDate, setFromDate] = useState(\"\");\n  const [toDate, setToDate] = useState(\"\");\n  const [fromHour, setFromHour] = useState(\"01\");\n  const [fromMinute, setFromMinute] = useState(\"00\");\n  const [fromTimePeriod, setFromTimePeriod] = useState(\"AM\");\n  const [toHour, setToHour] = useState(\"01\");\n  const [toMinute, setToMinute] = useState(\"00\");\n  const [toTimePeriod, setToTimePeriod] = useState(\"AM\");\n  const [selectedTime, setSelectedTime] = useState(\"\");\n  useEffect(() => {\n    // Fetch user details from the backend API (to be implemented later)\n    axios.get(\"http://localhost:3000/api/user-details\").then(response => {\n      const userData = response.data;\n      setUserName(userData.name);\n      setEmail(userData.email);\n    }).catch(error => {\n      console.error(\"Error fetching user details:\", error);\n    });\n  }, []); // Function to handle form submission\n\n  const handleSubmit = event => {\n    event.preventDefault(); // Placeholder for saving form data to backend (to be implemented later)\n\n    console.log(\"Form submitted:\", {\n      userName,\n      email,\n      phone,\n      fromDate,\n      toDate,\n      fromHour,\n      fromMinute,\n      fromTimePeriod,\n      toHour,\n      toMinute,\n      toTimePeriod\n    });\n  }; // Function to format the selected time\n\n\n  const formatTime = (hour, minute, timePeriod) => {\n    return `${hour}:${minute} ${timePeriod}`;\n  }; // Function to update selected time\n\n\n  const updateSelectedTime = () => {\n    const fromTime = formatTime(fromHour, fromMinute, fromTimePeriod);\n    const toTime = formatTime(toHour, toMinute, toTimePeriod);\n    setSelectedTime(`Selected time: From ${fromTime} to ${toTime}`);\n  }; // Update selected time whenever any time input changes\n\n\n  useEffect(() => {\n    updateSelectedTime();\n  }, [fromHour, fromMinute, fromTimePeriod, toHour, toMinute, toTimePeriod]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"book-seat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Book Your Seat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"userName\",\n          children: \"User Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"userName\",\n          value: userName,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: email,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"phone\",\n          children: \"Phone:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"phone\",\n          value: phone,\n          onChange: e => setPhone(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"fromDate\",\n          children: \"From Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          id: \"fromDate\",\n          min: new Date().toISOString().split(\"T\")[0],\n          value: fromDate,\n          onChange: e => setFromDate(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"toDate\",\n          children: \"To Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          id: \"toDate\",\n          min: fromDate,\n          value: toDate,\n          onChange: e => setToDate(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"fromTime\",\n          children: \"From Time:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"fromHour\",\n          value: fromHour,\n          onChange: e => setFromHour(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), \":\", /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"fromMinute\",\n          value: fromMinute,\n          onChange: e => setFromMinute(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"fromTimePeriod\",\n          value: fromTimePeriod,\n          onChange: e => setFromTimePeriod(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"AM\",\n            children: \"AM\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"PM\",\n            children: \"PM\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"toTime\",\n          children: \"To Time:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"toHour\",\n          value: toHour,\n          onChange: e => setToHour(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), \":\", /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"toMinute\",\n          value: toMinute,\n          onChange: e => setToMinute(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"toTimePeriod\",\n          value: toTimePeriod,\n          onChange: e => setToTimePeriod(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"AM\",\n            children: \"AM\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"PM\",\n            children: \"PM\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Book Seat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: selectedTime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\nexport default BookSeatPage;","map":{"version":3,"sources":["C:/Users/Srv/OneDrive - Veralto/Desktop/seating-bus/frontend/src/components/BookSeatPage/BookSeatPage.jsx"],"names":["React","useState","useEffect","axios","BookSeatPage","userName","setUserName","email","setEmail","phone","setPhone","fromDate","setFromDate","toDate","setToDate","fromHour","setFromHour","fromMinute","setFromMinute","fromTimePeriod","setFromTimePeriod","toHour","setToHour","toMinute","setToMinute","toTimePeriod","setToTimePeriod","selectedTime","setSelectedTime","get","then","response","userData","data","name","catch","error","console","handleSubmit","event","preventDefault","log","formatTime","hour","minute","timePeriod","updateSelectedTime","fromTime","toTime","e","target","value","Date","toISOString","split"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./BookSeatPage.css\"; // Import CSS for BookSeatPage\r\nimport axios from \"axios\";\r\n\r\nconst BookSeatPage = () => {\r\n  // State variables for form fields\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [fromDate, setFromDate] = useState(\"\");\r\n  const [toDate, setToDate] = useState(\"\");\r\n  const [fromHour, setFromHour] = useState(\"01\");\r\n  const [fromMinute, setFromMinute] = useState(\"00\");\r\n  const [fromTimePeriod, setFromTimePeriod] = useState(\"AM\");\r\n  const [toHour, setToHour] = useState(\"01\");\r\n  const [toMinute, setToMinute] = useState(\"00\");\r\n  const [toTimePeriod, setToTimePeriod] = useState(\"AM\");\r\n  const [selectedTime, setSelectedTime] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    // Fetch user details from the backend API (to be implemented later)\r\n    axios\r\n      .get(\"http://localhost:3000/api/user-details\")\r\n      .then((response) => {\r\n        const userData = response.data;\r\n        setUserName(userData.name);\r\n        setEmail(userData.email);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching user details:\", error);\r\n      });\r\n  }, []);\r\n\r\n  // Function to handle form submission\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    // Placeholder for saving form data to backend (to be implemented later)\r\n    console.log(\"Form submitted:\", {\r\n      userName,\r\n      email,\r\n      phone,\r\n      fromDate,\r\n      toDate,\r\n      fromHour,\r\n      fromMinute,\r\n      fromTimePeriod,\r\n      toHour,\r\n      toMinute,\r\n      toTimePeriod,\r\n    });\r\n  };\r\n\r\n  // Function to format the selected time\r\n  const formatTime = (hour, minute, timePeriod) => {\r\n    return `${hour}:${minute} ${timePeriod}`;\r\n  };\r\n\r\n  // Function to update selected time\r\n  const updateSelectedTime = () => {\r\n    const fromTime = formatTime(fromHour, fromMinute, fromTimePeriod);\r\n    const toTime = formatTime(toHour, toMinute, toTimePeriod);\r\n    setSelectedTime(`Selected time: From ${fromTime} to ${toTime}`);\r\n  };\r\n\r\n  // Update selected time whenever any time input changes\r\n  useEffect(() => {\r\n    updateSelectedTime();\r\n  }, [fromHour, fromMinute, fromTimePeriod, toHour, toMinute, toTimePeriod]);\r\n\r\n  return (\r\n    <div className=\"book-seat-container\">\r\n      <h2>Book Your Seat</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"userName\">User Name:</label>\r\n          <input type=\"text\" id=\"userName\" value={userName} readOnly />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\">Email:</label>\r\n          <input type=\"email\" id=\"email\" value={email} readOnly />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"phone\">Phone:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"phone\"\r\n            value={phone}\r\n            onChange={(e) => setPhone(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"fromDate\">From Date:</label>\r\n          <input\r\n            type=\"date\"\r\n            id=\"fromDate\"\r\n            min={new Date().toISOString().split(\"T\")[0]}\r\n            value={fromDate}\r\n            onChange={(e) => setFromDate(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"toDate\">To Date:</label>\r\n          <input\r\n            type=\"date\"\r\n            id=\"toDate\"\r\n            min={fromDate}\r\n            value={toDate}\r\n            onChange={(e) => setToDate(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"fromTime\">From Time:</label>\r\n          <select\r\n            id=\"fromHour\"\r\n            value={fromHour}\r\n            onChange={(e) => setFromHour(e.target.value)}\r\n          >\r\n            {/* Options for hours */}\r\n          </select>\r\n          :\r\n          <select\r\n            id=\"fromMinute\"\r\n            value={fromMinute}\r\n            onChange={(e) => setFromMinute(e.target.value)}\r\n          >\r\n            {/* Options for minutes */}\r\n          </select>\r\n          <select\r\n            id=\"fromTimePeriod\"\r\n            value={fromTimePeriod}\r\n            onChange={(e) => setFromTimePeriod(e.target.value)}\r\n          >\r\n            <option value=\"AM\">AM</option>\r\n            <option value=\"PM\">PM</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"toTime\">To Time:</label>\r\n          <select\r\n            id=\"toHour\"\r\n            value={toHour}\r\n            onChange={(e) => setToHour(e.target.value)}\r\n          >\r\n            {/* Options for hours */}\r\n          </select>\r\n          :\r\n          <select\r\n            id=\"toMinute\"\r\n            value={toMinute}\r\n            onChange={(e) => setToMinute(e.target.value)}\r\n          >\r\n            {/* Options for minutes */}\r\n          </select>\r\n          <select\r\n            id=\"toTimePeriod\"\r\n            value={toTimePeriod}\r\n            onChange={(e) => setToTimePeriod(e.target.value)}\r\n          >\r\n            <option value=\"AM\">AM</option>\r\n            <option value=\"PM\">PM</option>\r\n          </select>\r\n        </div>\r\n        <button type=\"submit\">Book Seat</button>\r\n      </form>\r\n      {/* Display selected time */}\r\n      <p>{selectedTime}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookSeatPage;\r\n"]},"metadata":{},"sourceType":"module"}