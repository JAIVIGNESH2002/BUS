{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Srv\\\\OneDrive - Veralto\\\\Desktop\\\\BYS-PROJECT\\\\seating-bus\\\\frontend\\\\src\\\\components\\\\Admin\\\\UserManagementPage.jsx\";\n// src/components/Admin/UserManagementPage.jsx\nimport React, { useState, useEffect } from 'react';\nimport './UserManagementPage.css';\nimport EditUserPopup from './EditUserPopup'; // Import the EditUserPopup component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserManagementPage = () => {\n  const [users, setUsers] = useState([]);\n  const [showEditPopup, setShowEditPopup] = useState(false);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [showDeleteConfirmation, setShowDeleteConfirmation] = useState(false);\n  const [userToDelete, setUserToDelete] = useState(null);\n  useEffect(() => {\n    // Fetch users from the backend (to be implemented later)\n    // For now, use static data\n    const staticUsers = [{\n      id: 1,\n      name: 'John Doe',\n      email: 'john@example.com'\n    }, {\n      id: 2,\n      name: 'Jane Smith',\n      email: 'jane@example.com'\n    } // Add more static user data as needed\n    ];\n    setUsers(staticUsers);\n  }, []);\n\n  const handleEditUser = user => {\n    setSelectedUser(user);\n    setShowEditPopup(true);\n  };\n\n  const handleSaveUser = editedUser => {\n    // Save edited user details to the backend (to be implemented later)\n    // For now, update the user in the local state\n    setUsers(prevUsers => prevUsers.map(u => u.id === editedUser.id ? editedUser : u));\n    setShowEditPopup(false);\n  };\n\n  const handleCancelEdit = () => {\n    setShowEditPopup(false);\n  };\n\n  const handleDeleteUser = user => {\n    setUserToDelete(user);\n    setShowDeleteConfirmation(true);\n  };\n\n  const confirmDelete = () => {\n    // Delete the user from the local state\n    setUsers(prevUsers => prevUsers.filter(u => u.id !== userToDelete.id));\n    setShowDeleteConfirmation(false);\n  };\n\n  const cancelDelete = () => {\n    setShowDeleteConfirmation(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-management-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEditUser(user),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteUser(user),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), showEditPopup && /*#__PURE__*/_jsxDEV(EditUserPopup, {\n      user: selectedUser,\n      onSave: handleSaveUser,\n      onCancel: handleCancelEdit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), showDeleteConfirmation && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"delete-confirmation\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Are you sure you want to delete this user?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: confirmDelete,\n        children: \"Yes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: cancelDelete,\n        children: \"No\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\nexport default UserManagementPage;","map":{"version":3,"sources":["C:/Users/Srv/OneDrive - Veralto/Desktop/BYS-PROJECT/seating-bus/frontend/src/components/Admin/UserManagementPage.jsx"],"names":["React","useState","useEffect","EditUserPopup","UserManagementPage","users","setUsers","showEditPopup","setShowEditPopup","selectedUser","setSelectedUser","showDeleteConfirmation","setShowDeleteConfirmation","userToDelete","setUserToDelete","staticUsers","id","name","email","handleEditUser","user","handleSaveUser","editedUser","prevUsers","map","u","handleCancelEdit","handleDeleteUser","confirmDelete","filter","cancelDelete"],"mappings":"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","sourcesContent":["// src/components/Admin/UserManagementPage.jsx\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport './UserManagementPage.css';\r\nimport EditUserPopup from './EditUserPopup'; // Import the EditUserPopup component\r\n\r\nconst UserManagementPage = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [showEditPopup, setShowEditPopup] = useState(false);\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n  const [showDeleteConfirmation, setShowDeleteConfirmation] = useState(false);\r\n  const [userToDelete, setUserToDelete] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Fetch users from the backend (to be implemented later)\r\n    // For now, use static data\r\n    const staticUsers = [\r\n      { id: 1, name: 'John Doe', email: 'john@example.com' },\r\n      { id: 2, name: 'Jane Smith', email: 'jane@example.com' },\r\n      // Add more static user data as needed\r\n    ];\r\n    setUsers(staticUsers);\r\n  }, []);\r\n\r\n  const handleEditUser = (user) => {\r\n    setSelectedUser(user);\r\n    setShowEditPopup(true);\r\n  };\r\n\r\n  const handleSaveUser = (editedUser) => {\r\n    // Save edited user details to the backend (to be implemented later)\r\n    // For now, update the user in the local state\r\n    setUsers(prevUsers => prevUsers.map(u => u.id === editedUser.id ? editedUser : u));\r\n    setShowEditPopup(false);\r\n  };\r\n\r\n  const handleCancelEdit = () => {\r\n    setShowEditPopup(false);\r\n  };\r\n\r\n  const handleDeleteUser = (user) => {\r\n    setUserToDelete(user);\r\n    setShowDeleteConfirmation(true);\r\n  };\r\n\r\n  const confirmDelete = () => {\r\n    // Delete the user from the local state\r\n    setUsers(prevUsers => prevUsers.filter(u => u.id !== userToDelete.id));\r\n    setShowDeleteConfirmation(false);\r\n  };\r\n\r\n  const cancelDelete = () => {\r\n    setShowDeleteConfirmation(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"user-management-container\">\r\n      <h2>User Management</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Name</th>\r\n            <th>Email</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {users.map(user => (\r\n            <tr key={user.id}>\r\n              <td>{user.id}</td>\r\n              <td>{user.name}</td>\r\n              <td>{user.email}</td>\r\n              <td>\r\n                <button onClick={() => handleEditUser(user)}>Edit</button>\r\n                <button onClick={() => handleDeleteUser(user)}>Delete</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      {/* Render edit user popup if showEditPopup is true */}\r\n      {showEditPopup && (\r\n        <EditUserPopup user={selectedUser} onSave={handleSaveUser} onCancel={handleCancelEdit} />\r\n      )}\r\n      {/* Render delete confirmation popup if showDeleteConfirmation is true */}\r\n      {showDeleteConfirmation && (\r\n        <div className=\"delete-confirmation\">\r\n          <p>Are you sure you want to delete this user?</p>\r\n          <button onClick={confirmDelete}>Yes</button>\r\n          <button onClick={cancelDelete}>No</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserManagementPage;\r\n"]},"metadata":{},"sourceType":"module"}